{"version":3,"file":"colon.js","sources":["../src/init/construct.js","../src/compile/walk.js","../src/compile/parse.js","../src/compile/domify.js","../src/compile/defaults.js","../src/common/utils.js","../src/common/extend.js","../src/configure.js","../src/directives/if.js","../src/directives/src.js","../src/directives/show.js","../src/directives/text.js","../src/directives/each.js","../src/directives/style.js","../src/common/dom.js","../src/directives/class.js","../src/directives/attribute.js","../src/directives/index.js","../src/compile/generate.js","../src/directive.js","../src/compile/utils.js","../src/compile/index.js","../src/init/compile.js","../src/init/computed.js","../src/init/index.js","../src/index.js"],"sourcesContent":["export default function initConstruct(co) {\n    co.data = co.options.data || {};\n\n    /**\n     * Gets Value in Data\n     * @param {String} key\n     * @return {String} Value of key in data\n     */\n    co.get = key => co.data[key];\n}\n","/**\n * walk dom element\n *\n * @param {DOM}   el\n * @param {Function}   action\n * @param {Function} done\n */\nexport default function walk(el, action, done) {\n    const nodes = el.childNodes && [].slice.call(el.childNodes);\n\n    done = done || function () {};\n    action = action || function () {};\n\n    function next(skip) {\n        if (skip || nodes.length === 0) return done();\n        walk(nodes.shift(), action, next);\n    }\n\n    action(el, next);\n}\n","const tagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\n\nexport default {\n    text(text) {\n        if (!tagRE.test(text)) return JSON.stringify(text);\n\n        const tokens = [];\n        let lastIndex = tagRE.lastIndex = 0;\n        let index, matched;\n\n        while (matched = tagRE.exec(text)) {\n            index = matched.index;\n            if (index > lastIndex) {\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n            }\n            tokens.push(matched[1].trim());\n            lastIndex = index + matched[0].length;\n        }\n\n        if (lastIndex < text.length) tokens.push(JSON.stringify(text.slice(lastIndex)));\n\n        return tokens.join('+');\n    },\n};\n","/**\n * Converts a string into a DOM element\n *\n * @param {String} DOMString\n * @return {DOM}\n */\nexport default function domify(DOMString) {\n    const html = document.implementation.createHTMLDocument();\n\n    html.body.innerHTML = DOMString;\n\n    return html.body.children;\n}\n","export default {\n    template: ``,\n    data: {},\n};\n","export function format(name, separator) {\n    const RE = /([a-z]|(?:[A-Z0-9]+))([A-Z0-9]|$)/g;\n\n    return name.replace(RE, (_, $1, $2) => $1 + ($2 && (separator || '-') + $2)).toLowerCase();\n}\n\nexport function each(items, callback) {\n    let len, i = 0;\n\n\tif (Array.isArray(items)) {\n\t\tlen = items.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif (callback.call(items[i], items[i], i) === false) return items;\n\t\t}\n\t} else {\n\t\tfor ( i in items ) {\n            if (callback.call(items[i], items[i], i) === false) return items;\n\t\t}\n\t}\n\n\treturn items;\n}\n\nexport function type(object) {\n    const class2type = {};\n    const type = class2type.toString.call(object);\n    const typeString = 'Boolean Number String Function Array Date RegExp Object Error Symbol';\n\n    if (object == null) return `${object}`;\n\n    typeString.split(' ').forEach(type => class2type[`[object ${type}]`] = type.toLowerCase());\n\n    return (\n        typeof object === 'object' ||\n        typeof object === 'function'\n        ?\n        class2type[type] || 'object'\n        :\n        typeof object\n    );\n}\n\nexport function isPlainObject(object) {\n    const class2type = {};\n    const toString = class2type.toString;\n    const hasOwn = class2type.hasOwnProperty;\n    const fnToString = hasOwn.toString;\n    const ObjectFunctionString = fnToString.call(Object);\n\n    let prototype, ctor;\n\n    if (!object || toString.call(object) !== '[object Object]') return false;\n\n    prototype = Object.getPrototypeOf(object);\n\n    if (!prototype) return true;\n\n    ctor = hasOwn.call(prototype, 'constructor') && prototype.constructor;\n\n    return typeof ctor === 'function' && fnToString.call( ctor ) === ObjectFunctionString;\n}\n","import { type, isPlainObject } from './utils';\n\n/**\n * Extend object\n *\n * @method extend\n * @return {Object} object\n */\nexport default function extend() {\n    let options, name, clone, copy, source, copyIsArray,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false;\n\n    if (typeof target === 'boolean') {\n        deep = target;\n        target = arguments[i] || {};\n        i++;\n    }\n\n    if (typeof target !== 'object' && type(target) !== 'function') {\n        target = {};\n    }\n\n    if (i === length) {\n        target = this;\n        i--;\n    }\n\n    for (; i < length; i++) {\n        //\n        if ((options = arguments[i]) !== null) {\n            // for in source object\n            for (name in options) {\n\n                source = target[name];\n                copy = options[name];\n\n                if (target == copy) {\n                    continue;\n                }\n\n                // deep clone\n                if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                    // if copy is array\n                    if (copyIsArray) {\n                        copyIsArray = false;\n                        // if is not array, set it to array\n                        clone = source && Array.isArray(source) ? source : [];\n                    } else {\n                        // if copy is not a object, set it to object\n                        clone = source && isPlainObject(source) ? source : {};\n                    }\n\n                    target[name] = extend(deep, clone, copy);\n                } else if (copy !== undefined) {\n                    target[name] = copy;\n                }\n            }\n        }\n    }\n\n    return target;\n}\n","export default {\n    identifier: {\n        bind: `:`,\n    },\n    priority: [\n        'each',\n    ],\n};\n","import configure from '../configure';\n\nexport default {\n    bind() {\n        this.holder = document.createComment(`${configure.identifier.bind}${this.name}`);\n        this.node.parentNode.replaceChild(this.holder, this.node);\n    },\n    update(show) {\n        if (show) this.holder.parentNode.replaceChild(this.node, this.holder);\n    },\n};\n","export default {\n    update(src) {\n        this.node.setAttribute(this.name, src);\n    },\n};\n","export default {\n    update(show) {\n        this.node.style.display = show ? `block` : `none`;\n    },\n};\n","export default {\n    update(value) {\n        this.node.textContent = value;\n    },\n};\n","import configure from '../configure';\nimport colon from '../index';\n\nexport default {\n    bind() {\n        this.holder = document.createComment(`${configure.identifier.bind}${this.name}`);\n        this.node.parentNode.replaceChild(this.holder, this.node);\n    },\n    update(data) {\n        if (data && !Array.isArray(data)) return;\n\n        const fragment = document.createDocumentFragment();\n\n        data.map((item, index) => {\n            const co = colon({\n                template: this.node.cloneNode(true),\n                data: {\n                    item,\n                    index,\n                },\n            });\n            fragment.appendChild(co.options.template);\n        });\n\n        this.holder.parentNode.replaceChild(fragment, this.holder);\n    },\n};\n","import { format, each, type } from '../common/utils';\n\nexport default {\n    update(style) {\n        each(style, (item, i) => {\n            if (type(item) === 'object') {\n                each(item, (value, key) => this.node.style[format(key)] = value);\n            } else {\n                this.node.style[format(i)] = item;\n            }\n        });\n    },\n};\n","export function addClass(el, cls) {\n    if (!cls || !(cls = cls.trim())) return;\n\n    if (el.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(c => el.classList.add(c));\n        } else {\n            el.classList.add(cls);\n        }\n    } else {\n        const current = ` ${el.getAttribute('class') || ''} `;\n        if (current.indexOf(` ${cls} `) < 0) {\n            el.setAttribute('class', (current + cls).trim());\n        }\n    }\n}\n\nexport function removeClass(el, cls) {\n    if (!cls || !(cls = cls.trim())) return;\n\n    if (el.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(c => el.classList.remove(c));\n        } else {\n            el.classList.remove(cls);\n        }\n        if (!el.classList.length) el.removeAttribute('class');\n    } else {\n        let cur = ` ${el.getAttribute('class') || ''} `;\n        const tar = ` ${cls} `;\n        while (cur.indexOf(tar) >= 0) {\n            cur = cur.replace(tar, ' ');\n        }\n        cur = cur.trim();\n        cur ? el.setAttribute('class', cur) : el.removeAttribute('class');\n    }\n}\n","import { each, type } from '../common/utils';\nimport { addClass, removeClass } from '../common/dom';\n\nexport default {\n    update(clus) {\n        each(clus, (item, i) => {\n            if (type(item) === 'object') {\n                each(item, (value, key) => value ? addClass(this.node, key) : removeClass(this.node, key));\n            } else {\n                const className = type(i) === 'number' ? item : i;\n                item ? addClass(this.node, className) : removeClass(this.node, className);\n            }\n        });\n    },\n};\n","export default {\n    update(value) {\n        this.node.setAttribute(this.attrName, value);\n    },\n};\n","import IF from './if';\nimport src from './src';\nimport show from './show';\nimport text from './text';\nimport each from './each';\nimport style from './style';\nimport clus from './class';\nimport attribute from './attribute';\n\nexport default {\n    IF,\n    src,\n    show,\n    text,\n    each,\n    style,\n    clus,\n    attribute,\n};\n","const expressionRE = /\"[^\"]*\"|'[^']*'|\\.\\w*[a-zA-Z$_]\\w*|\\w*[a-zA-Z$_]\\w*:|(\\w*[a-zA-Z$_]\\w*)/g;\nconst globals = ['true', 'false', 'undefined', 'null', 'NaN', 'typeof', 'in'];\n\nexport function generate(expression) {\n    const dependencies = extractDependencies(expression);\n    let dependenciesCode = '';\n\n\tfor(let i = 0; i < dependencies.length; i++) {\n        const dependency = dependencies[i];\n        dependenciesCode += `var ${dependency} = this.get(\"${dependency}\"); `;\n\t}\n\n    return new Function(`${dependenciesCode}return ${expression};`);\n}\n\nexport function extractDependencies(expression) {\n    const dependencies = [];\n\n    expression.replace(expressionRE, function(match, reference) {\n        if(\n            reference !== undefined &&\n            dependencies.indexOf(reference) === -1 &&\n            globals.indexOf(reference) === -1\n        ) {\n            dependencies.push(reference);\n        }\n    });\n\n    return dependencies;\n}\n","import directives from './directives/index';\nimport { generate } from './compile/generate';\n\nexport default class Directive {\n    constructor(options = {}) {\n        if (options.name === 'if') options.name = `IF`;\n        if (options.name === 'class') options.name = `clus`;\n\n        Object.assign(this, options);\n        Object.assign(this, directives[this.name]);\n        this.bindData();\n    }\n\n    bindData() {\n        if (!this.expression) return;\n        this.bind && this.bind();\n        this.update && this.update(generate(this.expression).call(this.co));\n    }\n}\n","export const hasInterpolation = text => /\\{?\\{\\{(.+?)\\}\\}\\}?/g.test(text);\n","import walk from './walk';\nimport parse from './parse';\nimport domify from './domify';\nimport defaults from './defaults';\nimport extend from '../common/extend';\nimport configure from '../configure';\nimport Directive from '../directive';\nimport { hasInterpolation } from './utils';\n\nexport default function Compile(template, options = {}) {\n    if (!(this instanceof Compile)) return new Compile(template, options);\n\n    if (template instanceof Node) {\n        options.template = template;\n    } else if (typeof template === 'string') {\n        [template] = domify(template);\n        options.template = template;\n    } else if (typeof template !== 'string') {\n        options = template;\n    }\n\n    this.options = extend(true, defaults, options);\n    this.co = this.options.co;\n    template = this.options.template;\n\n    walk(template, (node, next) => {\n        if (node.nodeType === 1) {\n            const skip = this.compile.elementNodes.call(this, node);\n            return next(skip === false);\n        } else if (node.nodeType === 3) {\n            this.compile.textNodes.call(this, node);\n        }\n        next();\n    });\n\n    this.view = template;\n    template = null;\n}\n\nCompile.prototype.compile = {};\n\n/**\n * compile element nodes\n *\n * @param {Node} node\n * @return {Void|Boolean}\n */\nCompile.prototype.compile.elementNodes = function (node) {\n    let attributes = [].slice.call(node.attributes),\n        attrName = ``,\n        attrValue = ``,\n        directiveName = ``;\n\n    if (node.hasAttributes() && this.bindPriority(node)) return false;\n\n    attributes.map(attribute => {\n        attrName = attribute.name;\n        attrValue = attribute.value.trim();\n\n        if (attrName.indexOf(configure.identifier.bind) === 0 && attrValue !== '') {\n            directiveName = attrName.slice(configure.identifier.bind.length);\n\n            this.bindDirective({\n                node,\n                expression: attrValue,\n                name: directiveName,\n            });\n            node.removeAttribute(attrName);\n        } else {\n            this.bindAttribute(node, attribute);\n        }\n    });\n};\n\n/**\n * compile text nodes.\n *\n * @param {Node} node\n * @return {Void|Boolean}\n */\nCompile.prototype.compile.textNodes = function (node) {\n    if (node.textContent.trim() === '') return false;\n    const el = document.createTextNode('');\n    node.parentNode.insertBefore(el, node);\n    this.bindDirective({\n        node: el,\n        name: 'text',\n        expression: parse.text(node.textContent),\n    });\n\n    node.parentNode.removeChild(node);\n};\n\n/**\n * bind directive\n *\n * @param {Object} options - directive options\n */\nCompile.prototype.bindDirective = function (options) {\n    new Directive({\n        ...options,\n        co: this.co,\n    });\n};\n\n/**\n * bind attribute.\n *\n * @param {Node} node\n * @param {Node} attribute\n */\nCompile.prototype.bindAttribute = function (node, attribute) {\n    if (!hasInterpolation(attribute.value) || attribute.value.trim() == '') return false;\n\n    this.bindDirective({\n        node,\n        name: 'attribute',\n        expression: parse.text(attribute.value),\n        attrName: attribute.name,\n    });\n};\n\n/**\n * bind priority directive.\n *\n * @param {Node} node\n * @return {Boolean}\n */\nCompile.prototype.bindPriority = function (node) {\n    let attrValue,\n        directive;\n\n    for (let i = 0; i < configure.priority.length; i++) {\n        directive = configure.priority[i];\n        attrValue = node.getAttribute(`${configure.identifier.bind}${directive}`);\n\n        if (attrValue) {\n            attrValue = attrValue.trim();\n            if (!attrValue) return false;\n\n            node.removeAttribute(`${configure.identifier.bind}${directive}`);\n            this.bindDirective({\n                node,\n                name: directive,\n                expression: attrValue,\n            });\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n};\n","import Compile from '../compile/index';\n\nexport default function initCompile(co) {\n    co.$Compile = Compile;\n\n    co.view = co.$Compile(co.options.template, {\n        data: co.data,\n        co,\n    }).view;\n}\n","export default function initComputed(co) {\n    const computed = co.options.computed;\n\n    if (!computed) return;\n\n    let descriptor, prop;\n\n    for (prop in computed) {\n        descriptor = computed[prop];\n\n        if (typeof descriptor === 'function') {\n            descriptor = {\n                get: descriptor,\n            };\n\n            descriptor.enumerable = true;\n            descriptor.configurable = true;\n            \n            Object.defineProperty(co.data, prop, descriptor);\n        }\n    }\n}\n","import initConstruct from './construct';\nimport initCompile from './compile';\nimport initComputed from './computed';\n\nexport default function init(co) {\n    initConstruct(co);\n    initComputed(co);\n    initCompile(co);\n}\n","import init from './init/index';\n\nexport default function colon(options) {\n    if (!(this instanceof colon)) return new colon(options);\n\n    this.options = options;\n    init(this);\n}\n"],"names":["initConstruct","co","data","options","get","key","walk","el","action","done","nodes","childNodes","slice","call","next","skip","length","shift","tagRE","text","test","JSON","stringify","tokens","lastIndex","index","matched","exec","push","trim","join","domify","DOMString","html","document","implementation","createHTMLDocument","body","innerHTML","children","format","name","separator","RE","replace","_","$1","$2","toLowerCase","each","items","callback","len","i","Array","isArray","type","object","class2type","toString","typeString","split","forEach","isPlainObject","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","Object","prototype","ctor","getPrototypeOf","constructor","extend","clone","copy","source","copyIsArray","target","arguments","deep","undefined","holder","createComment","configure","identifier","bind","node","parentNode","replaceChild","show","src","setAttribute","style","display","value","textContent","fragment","createDocumentFragment","map","item","colon","cloneNode","appendChild","template","addClass","cls","classList","indexOf","add","c","current","getAttribute","removeClass","remove","removeAttribute","cur","tar","clus","className","attrName","expressionRE","globals","generate","expression","dependencies","extractDependencies","dependenciesCode","dependency","Function","match","reference","Directive","assign","directives","bindData","update","hasInterpolation","Compile","Node","defaults","nodeType","compile","elementNodes","textNodes","view","attributes","attrValue","directiveName","hasAttributes","bindPriority","attribute","bindDirective","bindAttribute","createTextNode","insertBefore","parse","removeChild","directive","priority","initCompile","$Compile","initComputed","computed","descriptor","prop","enumerable","configurable","defineProperty","init"],"mappings":"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"}